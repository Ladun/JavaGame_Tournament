package com.ladun.game.objects.interior;

import com.ladun.engine.GameContainer;
import com.ladun.engine.Renderer;
import com.ladun.engine.Time;
import com.ladun.engine.gfx.ImageTile;
import com.ladun.game.GameManager;
import com.ladun.game.components.CircleCollider;
import com.ladun.game.components.RectCollider;
import com.ladun.game.objects.GameObject;

public class AnimatedInterior extends Interior{

	private boolean animation;
	private float anim;
	private float animTime;
	private int animMaxIndex;

	public AnimatedInterior(String imageName, float posX,float posZ,int width, int height,float animTime,int animMaxIndex,boolean collision) {
		this(imageName,posX,posZ,width,height,animTime,animMaxIndex, collision,false);
	}
	public AnimatedInterior(String imageName,
			float posX,float posZ,
			int width, int height,
			float animTime,int animMaxIndex,
			boolean collision,boolean mirror) {

		super(imageName,posX,posZ,width,height,collision,mirror );
		
		this.animTime =  1f / animTime;
		this.animMaxIndex = animMaxIndex;
		this.animation = true;

		if(collision) {
			this.addComponent(new RectCollider(this));
		}
	}	
	public AnimatedInterior(String imageName, float posX,float posZ, int radius,float animTime,int animMaxIndex,boolean collision) {
		this(imageName,posX,posZ,radius,animTime,animMaxIndex, collision,false);
	}
	public AnimatedInterior(String imageName,
			float posX,float posZ,
			int radius,
			float animTime,int animMaxIndex,
			boolean collision,boolean mirror) {

		super(imageName, posX, posZ, radius, collision, mirror);
		
		this.animTime = 1f / animTime;
		this.animMaxIndex = animMaxIndex;
		this.animation = true;
		if(collision) {
			this.addComponent(new CircleCollider(this));
		}
	}
	
	@Override
	public void update(GameContainer gc, GameManager gm) {
		
		
		if(animation) {
			anim += Time.DELTA_TIME * animTime * animMaxIndex;
			if(anim >= animMaxIndex)
				anim -= animMaxIndex;
		}
		this.updateComponents(gc, gm);
	}

	@Override
	public void render(GameContainer gc, Renderer r) {
		
		r.setzDepth((int)posZ + height - pB);
		r.drawImageTile((ImageTile)gc.getResourceLoader().getImage(imageName), (int)posX, (int)posZ, (int)anim, 0,mirror, false, 0);

		if(lighting)
			r.drawLight(light, (int)posX, (int)posZ);
		this.renderComponents(gc, r);
	}

	@Override
	public void collision(GameObject other) {
		
	}
}
