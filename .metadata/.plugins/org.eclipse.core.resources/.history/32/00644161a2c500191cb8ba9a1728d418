package com.ladun.game.Scene;

import com.ladun.engine.GameContainer;
import com.ladun.engine.Renderer;
import com.ladun.engine.Time;
import com.ladun.game.GameManager;

public class LoadingScene extends AbstractScene{

	
	private float 		time = 0;
	
	private boolean 	fading;
	private float 		fadingPercent	= 0;
	private float		fadingTime		= .7f;
	
	private boolean 	callImageLoadFunc = false;
	
	@Override
	public boolean init(GameContainer gc, GameManager gm, boolean active) {
		// TODO Auto-generated method stub
		this.gm = gm;
		this.active = active;		
		this.name = "InGame";	
		
		
		this.fadingPercent	= 1; 
		this.fadingTime = (float)Time.DELTA_TIME / fadingTime; // Time.DELTA_TIME * (1 / fadingTime)
		return true;
	}

	@Override
	public void update(GameContainer gc) {
		// TODO Auto-generated method stub
		time += Time.DELTA_TIME;
		if(time >= 2.5f) {
			if(fadingPercent < 1) {
				fadingPercent += fadingTime;
				if(fadingPercent < 0) {
					
				}
			}
		}
		else if(time >= 1) {
			if(!callImageLoadFunc) {
				callImageLoadFunc = true;
				ImageLoad(gc);
			}
			fadingPercent -= fadingTime;
		}
	}

	@Override
	public void render(GameContainer gc, Renderer r) {
		// TODO Auto-generated method stub
		
	}
	
	private void ImageLoad(GameContainer gc) {
		new Thread(() ->{
			
			gm.setLoading(true);
			gc.getImageLoader().ImageLoad();
			gm.setLoading(false);
			
		},"ImageLoad-Thread").start();
	}

	@Override
	public int getLevelW() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getLevelH() {
		// TODO Auto-generated method stub
		return 0;
	}

}
